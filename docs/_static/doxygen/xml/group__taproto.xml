<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="group__taproto" kind="group">
    <compoundname>taproto</compoundname>
    <title>Protocol Steps for Terminal Authentication</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__taproto_1ga3b9f3dfea8560bd63e9594d32994bd95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TA_disable_checks</definition>
        <argsstring>(EAC_CTX *ctx)</argsstring>
        <name>TA_disable_checks</name>
        <param>
          <type><ref refid="eac_8h_1ae9b1b2593999b3c1b8eb10a4629b7c94" kindref="member">EAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Enables <computeroutput>TA_FLAG_SKIP_TIMECHECK</computeroutput> in the TA context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>EAC context for which to disable TA checks </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ta.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__taproto_1ga042883976e7a3423db2f99f6501272a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TA_STEP2_import_certificate</definition>
        <argsstring>(const EAC_CTX *ctx, const unsigned char *cert, size_t cert_len)</argsstring>
        <name>TA_STEP2_import_certificate</name>
        <param>
          <type>const <ref refid="eac_8h_1ae9b1b2593999b3c1b8eb10a4629b7c94" kindref="member">EAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>cert</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cert_len</declname>
        </param>
        <briefdescription>
<para>Imports a CV Certificate to the EAC context. </para>        </briefdescription>
        <detaileddescription>
<para>This function should be used to subsequently verify all certificates of a certificate chain. The signature and date of the certificate are verified using the trust anchor or the most recently imported certificate. The TA context is adjusted to use domain parameters of the imported certificate. If the chain contains a new trust anchor (i.e. a CVCA certificate), the old trust anchor is replaced when EAC is completed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>EAC context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>raw Certificate to import </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cert_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of <emphasis>cert</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 on success or 0 in case of an error</para></simplesect>
<simplesect kind="see"><para><ulink url="http://frankmorgner.github.io/openpace/protocols.html#id3">TA&apos;s Protocol Specification</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ta.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__taproto_1ga1d7bcb63f5a375759d9d040c200068c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BUF_MEM *</type>
        <definition>BUF_MEM* TA_STEP3_generate_ephemeral_key</definition>
        <argsstring>(const EAC_CTX *ctx)</argsstring>
        <name>TA_STEP3_generate_ephemeral_key</name>
        <param>
          <type>const <ref refid="eac_8h_1ae9b1b2593999b3c1b8eb10a4629b7c94" kindref="member">EAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Generates ephemeral key for CA. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>EAC context. The CA context of <emphasis>ctx</emphasis> is initialized for key agreement</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ephemeral public key or NULL in case of an error</para></simplesect>
<simplesect kind="see"><para><ulink url="http://frankmorgner.github.io/openpace/protocols.html#id3">TA&apos;s Protocol Specification</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ta.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__taproto_1ga1a4d4534bb23c4d2ffefb5bfdec335ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BUF_MEM *</type>
        <definition>BUF_MEM* TA_STEP4_get_nonce</definition>
        <argsstring>(const EAC_CTX *ctx)</argsstring>
        <name>TA_STEP4_get_nonce</name>
        <param>
          <type>const <ref refid="eac_8h_1ae9b1b2593999b3c1b8eb10a4629b7c94" kindref="member">EAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Generates a nonce for the PCD. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>EAC context. The nonce is saved in <emphasis>ctx</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nonce or NULL in case of an error</para></simplesect>
<simplesect kind="note"><para>EAC_CTX_init_ca must have been called before the nonce can be generated</para></simplesect>
<simplesect kind="see"><para><ulink url="http://frankmorgner.github.io/openpace/protocols.html#id3">TA&apos;s Protocol Specification</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ta.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__taproto_1ga65d4a5c270c5071b7bc7bce3ab189cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TA_STEP4_set_nonce</definition>
        <argsstring>(const EAC_CTX *ctx, const BUF_MEM *nonce)</argsstring>
        <name>TA_STEP4_set_nonce</name>
        <param>
          <type>const <ref refid="eac_8h_1ae9b1b2593999b3c1b8eb10a4629b7c94" kindref="member">EAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const BUF_MEM *</type>
          <declname>nonce</declname>
        </param>
        <briefdescription>
<para>Import the nonce from the PICC. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>EAC context. The nonce is saved in <emphasis>ctx</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>The nonce to be copied</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 on success or 0 in case of an error</para></simplesect>
<simplesect kind="see"><para><ulink url="http://frankmorgner.github.io/openpace/protocols.html#id3">TA&apos;s Protocol Specification</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ta.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__taproto_1ga31712e0ebf291f0f31cd462f33a0d802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BUF_MEM *</type>
        <definition>BUF_MEM* TA_STEP5_sign</definition>
        <argsstring>(const EAC_CTX *ctx, const BUF_MEM *my_ta_eph_pubkey, const BUF_MEM *opp_pace_eph_pubkey, const BUF_MEM *auxdata)</argsstring>
        <name>TA_STEP5_sign</name>
        <param>
          <type>const <ref refid="eac_8h_1ae9b1b2593999b3c1b8eb10a4629b7c94" kindref="member">EAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const BUF_MEM *</type>
          <declname>my_ta_eph_pubkey</declname>
        </param>
        <param>
          <type>const BUF_MEM *</type>
          <declname>opp_pace_eph_pubkey</declname>
        </param>
        <param>
          <type>const BUF_MEM *</type>
          <declname>auxdata</declname>
        </param>
        <briefdescription>
<para>Signs data for terminal authentication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>EAC context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">my_ta_eph_pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>PCD&apos;s ephemeral public key generated in Step 3 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">opp_pace_eph_pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>PICC&apos;s ephemeral public key generated in PACE Step 3b </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">auxdata</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Auxiliary data from PCD</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Signature or NULL in case of an error</para></simplesect>
<simplesect kind="see"><para><ulink url="http://frankmorgner.github.io/openpace/protocols.html#id3">TA&apos;s Protocol Specification</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ta.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__taproto_1ga76fe96c3ba3d1ed684f08e8d486d2f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TA_STEP6_verify</definition>
        <argsstring>(const EAC_CTX *ctx, const BUF_MEM *opp_ta_comp_eph_pubkey, const BUF_MEM *my_pace_comp_eph_pubkey, const BUF_MEM *auxdata, const BUF_MEM *signature)</argsstring>
        <name>TA_STEP6_verify</name>
        <param>
          <type>const <ref refid="eac_8h_1ae9b1b2593999b3c1b8eb10a4629b7c94" kindref="member">EAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const BUF_MEM *</type>
          <declname>opp_ta_comp_eph_pubkey</declname>
        </param>
        <param>
          <type>const BUF_MEM *</type>
          <declname>my_pace_comp_eph_pubkey</declname>
        </param>
        <param>
          <type>const BUF_MEM *</type>
          <declname>auxdata</declname>
        </param>
        <param>
          <type>const BUF_MEM *</type>
          <declname>signature</declname>
        </param>
        <briefdescription>
<para>Verifies PCD&apos;s signature from TA step 5. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>EAC context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">opp_ta_comp_eph_pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>PCD&apos;s compressed ephemeral public key generated in Step 3 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">my_pace_comp_eph_pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>PICC&apos;s compressed ephemeral public key generated in PACE Step 3b </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">auxdata</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Auxiliary data from PCD </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signature</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to verify</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the signature has been verified, 0 if not or -1 in case of an error</para></simplesect>
<simplesect kind="see"><para><ulink url="http://frankmorgner.github.io/openpace/protocols.html#id3">TA&apos;s Protocol Specification</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ta.h" line="151" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
