<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="ri_8h" kind="file">
    <compoundname>ri.h</compoundname>
    <includes refid="eac_8h" local="no">eac/eac.h</includes>
    <includes local="no">openssl/bn.h</includes>
    <includes local="no">openssl/buffer.h</includes>
    <incdepgraph>
      <node id="70">
        <label>openssl/asn1t.h</label>
      </node>
      <node id="68">
        <label>openssl/obj_mac.h</label>
      </node>
      <node id="69">
        <label>openssl/asn1.h</label>
      </node>
      <node id="67">
        <label>eac/objects.h</label>
        <link refid="objects_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>openssl/bio.h</label>
      </node>
      <node id="66">
        <label>eac/cv_cert.h</label>
        <link refid="cv__cert_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>openssl/buffer.h</label>
      </node>
      <node id="65">
        <label>eac/eac.h</label>
        <link refid="eac_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>openssl/evp.h</label>
      </node>
      <node id="74">
        <label>openssl/ec.h</label>
      </node>
      <node id="73">
        <label>openssl/cmac.h</label>
      </node>
      <node id="76">
        <label>openssl/bn.h</label>
      </node>
      <node id="64">
        <label>eac/ri.h</label>
        <link refid="ri.h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__management_1ga3f50a8cffdf5aab322e37dafc6763ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RI_CTX_clear_free</definition>
        <argsstring>(RI_CTX *s)</argsstring>
        <name>RI_CTX_clear_free</name>
        <param>
          <type><ref refid="eac_8h_1a5f9ef24d00954284d3dfb4988d89ccd5" kindref="member">RI_CTX</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Frees a <computeroutput>RI_CTX</computeroutput> object and all its components. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to free (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ri.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__management_1gac0bf8ff4cfd00ed06afceaf89c10aa3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="eac_8h_1a5f9ef24d00954284d3dfb4988d89ccd5" kindref="member">RI_CTX</ref> *</type>
        <definition>RI_CTX* RI_CTX_new</definition>
        <argsstring>(void)</argsstring>
        <name>RI_CTX_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Creates a new <computeroutput>RI_CTX</computeroutput> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The new object or NULL if an error occurred </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ri.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__management_1gabeaf41c7c78859490c52308196c1aa66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RI_CTX_set_protocol</definition>
        <argsstring>(RI_CTX *ctx, int protocol)</argsstring>
        <name>RI_CTX_set_protocol</name>
        <param>
          <type><ref refid="eac_8h_1a5f9ef24d00954284d3dfb4988d89ccd5" kindref="member">RI_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
<para>Initializes a <computeroutput>RI_CTX</computeroutput> object using the protocol OID. This parameter can be found in the RIInfo part of an EF.CardSecurity. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>RI_CTX</computeroutput> object to initialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">protocol</parametername>
</parameternamelist>
<parameterdescription>
<para>The NID of the OID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 in case of success, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ri.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__riproto_1ga93bccb469abf0a6070b839b099505e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BUF_MEM *</type>
        <definition>BUF_MEM* RI_STEP2_compute_identifier</definition>
        <argsstring>(EAC_CTX *ctx, BUF_MEM *sector_pubkey)</argsstring>
        <name>RI_STEP2_compute_identifier</name>
        <param>
          <type><ref refid="eac_8h_1ae9b1b2593999b3c1b8eb10a4629b7c94" kindref="member">EAC_CTX</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>BUF_MEM *</type>
          <declname>sector_pubkey</declname>
        </param>
        <briefdescription>
<para>Compute a sector specific identifier for a card within a given sector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The EAC context of the card </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sector_pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>the sector public key</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sector identifier or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/ri.h" line="91" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for Restricted Identification. </para>    </briefdescription>
    <detaileddescription>
<para>Restricted Identification is a protocol to generate pseudonym identifier based on key agreement protocol. The protocol use a secret key of an asymetric key pair and the public key of a second asymetric key pair. For every two diffrent secret keys with same public key the identifier is diffrent. For any two diffrent public keys it is computational infeasible to link two identifiers with the same secret key.</para><para><simplesect kind="author"><para>Dominik Oepen <ulink url="mailto:oepen@informatik.hu-berlin.de">oepen@informatik.hu-berlin.de</ulink> </para></simplesect>
<simplesect kind="author"><para>Frank Morgner <ulink url="mailto:frankmorgner@gmail.com">frankmorgner@gmail.com</ulink> </para></simplesect>
<simplesect kind="author"><para>Paul Wilhelm <ulink url="mailto:wilhelm@math.hu-berlin.de">wilhelm@math.hu-berlin.de</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Dominik<sp/>Oepen,<sp/>Frank<sp/>Morgner<sp/>and<sp/>Paul<sp/>Wilhelm</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>OpenPACE.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>OpenPACE<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>OpenPACE<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT<sp/>ANY</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along<sp/>with</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>OpenPACE.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor">#ifndef<sp/>RI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="eac_8h" kindref="compound">eac/eac.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/buffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__management_1ga3f50a8cffdf5aab322e37dafc6763ef7" kindref="member">RI_CTX_clear_free</ref>(<ref refid="structri__ctx" kindref="compound">RI_CTX</ref><sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="structri__ctx" kindref="compound">RI_CTX</ref><sp/>*<sp/><ref refid="group__management_1gac0bf8ff4cfd00ed06afceaf89c10aa3e" kindref="member">RI_CTX_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__management_1gabeaf41c7c78859490c52308196c1aa66" kindref="member">RI_CTX_set_protocol</ref>(<ref refid="structri__ctx" kindref="compound">RI_CTX</ref><sp/>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocol);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">BUF_MEM<sp/>*<sp/><ref refid="group__riproto_1ga93bccb469abf0a6070b839b099505e96" kindref="member">RI_STEP2_compute_identifier</ref>(<ref refid="structeac__ctx" kindref="compound">EAC_CTX</ref><sp/>*ctx,<sp/>BUF_MEM<sp/>*sector_pubkey);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/fm/Dokumente/openpace/src/eac/ri.h"/>
  </compounddef>
</doxygen>
