<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="cv__cert_8h" kind="file">
    <compoundname>cv_cert.h</compoundname>
    <includes refid="objects_8h" local="no">eac/objects.h</includes>
    <includes local="no">openssl/asn1.h</includes>
    <includes local="no">openssl/asn1t.h</includes>
    <includes local="no">openssl/bio.h</includes>
    <includedby refid="eac_8h" local="no">eac/eac.h</includedby>
    <incdepgraph>
      <node id="17">
        <label>openssl/asn1t.h</label>
      </node>
      <node id="15">
        <label>openssl/obj_mac.h</label>
      </node>
      <node id="16">
        <label>openssl/asn1.h</label>
      </node>
      <node id="14">
        <label>eac/objects.h</label>
        <link refid="objects_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>openssl/bio.h</label>
      </node>
      <node id="13">
        <label>eac/cv_cert.h</label>
        <link refid="cv_cert.h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22">
        <label>eac/pace.h</label>
        <link refid="pace_8h"/>
      </node>
      <node id="19">
        <label>eac/cv_cert.h</label>
        <link refid="cv_cert.h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>eac/eac.h</label>
        <link refid="eac_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>eac/ta.h</label>
        <link refid="ta_8h"/>
      </node>
      <node id="21">
        <label>eac/ca.h</label>
        <link refid="ca_8h"/>
      </node>
      <node id="23">
        <label>eac/ri.h</label>
        <link refid="ri_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcvc__chat__seq__st" prot="public">cvc_chat_seq_st</innerclass>
    <innerclass refid="structcvc__pubkey__st" prot="public">cvc_pubkey_st</innerclass>
    <innerclass refid="structcvc__discretionary__data__template__seq__st" prot="public">cvc_discretionary_data_template_seq_st</innerclass>
    <innerclass refid="structcvc__cert__body__seq__st" prot="public">cvc_cert_body_seq_st</innerclass>
    <innerclass refid="structcvc__cert__seq__st" prot="public">cvc_cert_seq_st</innerclass>
    <innerclass refid="structcvc__commcert__seq__st" prot="public">cvc_commcert_seq_st</innerclass>
    <innerclass refid="structcvc__certificate__description__st" prot="public">cvc_certificate_description_st</innerclass>
    <innerclass refid="structcvc__cert__request__body__seq__st" prot="public">cvc_cert_request_body_seq_st</innerclass>
    <innerclass refid="structcvc__cert__request__seq__st" prot="public">cvc_cert_request_seq_st</innerclass>
    <innerclass refid="structcvc__cert__authentication__request__seq__st" prot="public">cvc_cert_authentication_request_seq_st</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cv__cert_8h_1a94b4346228e7f2dfe7ddef89af1ca4d4" prot="public" static="no">
        <name>ASN1_APP_IMP</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_IMPTAG|ASN1_TFLG_APPLICATION, tag, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application specific, IMPLICIT tagged ASN1 type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="44" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1a98ef9b11d6ecb604ac25fa1287c30993" prot="public" static="no">
        <name>ASN1_APP_IMP_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_IMPTAG|ASN1_TFLG_APPLICATION|ASN1_TFLG_OPTIONAL, tag, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application specific, IMPLICIT tagged, optional ASN1 type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="48" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1a0d89b7dcca78890a2f2fc317bdecbfac" prot="public" static="no">
        <name>ASN1_APP_EXP_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_EXPTAG|ASN1_TFLG_APPLICATION|ASN1_TFLG_OPTIONAL, tag, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application specific, EXPLICIT tagged, optional ASN1 type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="52" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1a94461a893feaac94b71540207eac8ca8" prot="public" static="no">
        <name>ASN1_APP_IMP_SEQUENCE_OF_OPT</name>
        <param><defname>stname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>type</defname></param>
        <param><defname>tag</defname></param>
        <initializer>ASN1_EX_TYPE(ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_IMPTAG|ASN1_TFLG_APPLICATION|ASN1_TFLG_OPTIONAL, tag, stname, field, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="55" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1a47be716ebf79c681a0951f1358011d9e" prot="public" static="no">
        <name>EAC_AT_CHAT_BYTES</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="73" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1a8707d11e17a7d7e4ae7579dfa0ae081a" prot="public" static="no">
        <name>EAC_AT_CHAT_BITS</name>
        <initializer>38</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="74" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1a2c56345c5c7f97128b5fcaa54a73e876" prot="public" static="no">
        <name>EAC_IS_CHAT_BYTES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="75" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1aa323e907a4663fdb60d237df812a8d37" prot="public" static="no">
        <name>EAC_IS_CHAT_BITS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="76" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1a746dbe7b1bae7feadf6a80060cde4598" prot="public" static="no">
        <name>EAC_ST_CHAT_BYTES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="77" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cv__cert_8h_1a7f0bfe001862a6eb5a69a2ca80397fc4" prot="public" static="no">
        <name>EAC_ST_CHAT_BITS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="78" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__management_1gaf8df0122e9d69243120b62033c4b9474" prot="public" static="no">
        <name>CVC_CERT_dup</name>
        <param><defname>x</defname></param>
        <initializer>ASN1_dup_of(<ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref>, <ref refid="group__management_1ga63dd3f2ebdc39d4a9e0b0af8d12ec655" kindref="member">i2d_CVC_CERT</ref>, <ref refid="group__management_1ga59de291be2953ebf60bce12225fed74f" kindref="member">CVC_d2i_CVC_CERT</ref>, x)</initializer>
        <briefdescription>
<para>Duplicate a CV certificate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate to duplicate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Duplicated CV certificate or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="366" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__management_1ga3c3f5a64d45ed99d9c5cfd0a0c61b869" prot="public" static="no">
        <name>CVC_PUBKEY_dup</name>
        <param><defname>x</defname></param>
        <initializer>ASN1_dup_of(<ref refid="structcvc__pubkey__st" kindref="compound">CVC_PUBKEY</ref>, i2d_CVC_PUBKEY, d2i_CVC_PUBKEY, x)</initializer>
        <briefdescription>
<para>Duplicate a CVC public key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>CVC public key to duplicate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Duplicated CVC public or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="375" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__management_1gadf010f3a63a21336d1025a3f7814c322" prot="public" static="no">
        <name>CVC_CHAT_dup</name>
        <param><defname>x</defname></param>
        <initializer>ASN1_dup_of(<ref refid="cv__cert_8h_1a397bdd4c39a973f58c75c51c884d2d8a" kindref="member">CVC_CHAT</ref>, i2d_CVC_CHAT, d2i_CVC_CHAT, x)</initializer>
        <briefdescription>
<para>Duplicate a CHAT. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>CHAT to duplicate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Duplicated CHAT or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="384" column="9" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115a" prot="public" static="no">
        <name>cvc_terminal_role</name>
        <enumvalue id="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aac01726f5220ca8395070e254750af6fd" prot="public">
          <name>CVC_Terminal</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Terminal (inspection system/authentication terminal/signature terminal) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aae47e5b251c04c991351d4e1f578d44f4" prot="public">
          <name>CVC_DV</name>
          <briefdescription>
<para>Document Verifier (official domestic) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aae3de1a7addb996e92d516661d2ed5edd" prot="public">
          <name>CVC_DocVer</name>
          <briefdescription>
<para>Document Verifier (non-official/foreign) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aa9cc622972693e5a5fd3010c23003a931" prot="public">
          <name>CVC_CVCA</name>
          <briefdescription>
<para>Country Verifying Certificate Authority. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Effective role of the certificate holder. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="60" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="60" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cv__cert_8h_1a67c8d91f1c8ec511b2d549d96f7dd8f0" prot="public" static="no">
        <type>struct <ref refid="structcvc__chat__seq__st" kindref="compound">cvc_chat_seq_st</ref></type>
        <definition>typedef struct cvc_chat_seq_st  CVC_CHAT_SEQ</definition>
        <argsstring></argsstring>
        <name>CVC_CHAT_SEQ</name>
        <briefdescription>
<para>Certificate Holder Authentication Template. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>TR-03110 C.1.5. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1a397bdd4c39a973f58c75c51c884d2d8a" prot="public" static="no">
        <type><ref refid="cv__cert_8h_1a67c8d91f1c8ec511b2d549d96f7dd8f0" kindref="member">CVC_CHAT_SEQ</ref></type>
        <definition>typedef CVC_CHAT_SEQ CVC_CHAT</definition>
        <argsstring></argsstring>
        <name>CVC_CHAT</name>
        <briefdescription>
<para>Short name for CVC_CHAT_SEQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="91" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1ac4a7f8515584948330dda1c4d5707bb1" prot="public" static="no">
        <type>struct <ref refid="structcvc__pubkey__st" kindref="compound">cvc_pubkey_st</ref></type>
        <definition>typedef struct cvc_pubkey_st  CVC_PUBKEY_BODY</definition>
        <argsstring></argsstring>
        <name>CVC_PUBKEY_BODY</name>
        <briefdescription>
<para>Public key data object which may contain domain parameters. </para>        </briefdescription>
        <detaileddescription>
<para>This data structure is used for defined public keys (RSA public key, DH public key, EC public key).</para><para><simplesect kind="see"><para>TR-03110 D.3. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1addb906d74522ebfef83550016aa4d825" prot="public" static="no">
        <type><ref refid="cv__cert_8h_1ac4a7f8515584948330dda1c4d5707bb1" kindref="member">CVC_PUBKEY_BODY</ref></type>
        <definition>typedef CVC_PUBKEY_BODY CVC_PUBKEY</definition>
        <argsstring></argsstring>
        <name>CVC_PUBKEY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="120" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1a37165b80c9bdb17cd70ca57f20c35b1c" prot="public" static="no">
        <type>struct <ref refid="structcvc__discretionary__data__template__seq__st" kindref="compound">cvc_discretionary_data_template_seq_st</ref></type>
        <definition>typedef struct cvc_discretionary_data_template_seq_st  CVC_DISCRETIONARY_DATA_TEMPLATE_SEQ</definition>
        <argsstring></argsstring>
        <name>CVC_DISCRETIONARY_DATA_TEMPLATE_SEQ</name>
        <briefdescription>
<para>Discretionary data template, used to encode certificate extensions. </para>        </briefdescription>
        <detaileddescription>
<para>Consists of an OID and up to two hash values. This data structure is used for both possible certificate extensions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1a10f55178dfcd3bba9e8ccbafae341f2e" prot="public" static="no">
        <type><ref refid="cv__cert_8h_1a37165b80c9bdb17cd70ca57f20c35b1c" kindref="member">CVC_DISCRETIONARY_DATA_TEMPLATE_SEQ</ref></type>
        <definition>typedef CVC_DISCRETIONARY_DATA_TEMPLATE_SEQ CVC_DISCRETIONARY_DATA_TEMPLATE</definition>
        <argsstring></argsstring>
        <name>CVC_DISCRETIONARY_DATA_TEMPLATE</name>
        <briefdescription>
<para>Short name for CVC_CERT_BODY_SEQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="143" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1a3b75d6bf4d0aac69e05339da1d5ef44c" prot="public" static="no">
        <type>struct <ref refid="structcvc__cert__body__seq__st" kindref="compound">cvc_cert_body_seq_st</ref></type>
        <definition>typedef struct cvc_cert_body_seq_st  CVC_CERT_BODY_SEQ</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_BODY_SEQ</name>
        <briefdescription>
<para>The body of the CV certificate (without signature) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>TR-03110 C.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1aa0d8534105b4b6c804ae40628fca719e" prot="public" static="no">
        <type><ref refid="cv__cert_8h_1a3b75d6bf4d0aac69e05339da1d5ef44c" kindref="member">CVC_CERT_BODY_SEQ</ref></type>
        <definition>typedef CVC_CERT_BODY_SEQ CVC_CERT_BODY</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_BODY</name>
        <briefdescription>
<para>Short name for CVC_CERT_BODY_SEQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="185" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1af7131eaf8748a5e5a906ad1dccabcfcf" prot="public" static="no">
        <type>struct <ref refid="structcvc__cert__seq__st" kindref="compound">cvc_cert_seq_st</ref></type>
        <definition>typedef struct cvc_cert_seq_st  CVC_CERT_SEQ</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_SEQ</name>
        <briefdescription>
<para>The actual certifcate, consisting of the body and a signature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>TR-03110 C.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" prot="public" static="no">
        <type><ref refid="cv__cert_8h_1af7131eaf8748a5e5a906ad1dccabcfcf" kindref="member">CVC_CERT_SEQ</ref></type>
        <definition>typedef CVC_CERT_SEQ CVC_CERT</definition>
        <argsstring></argsstring>
        <name>CVC_CERT</name>
        <briefdescription>
<para>Short name for CVC_CERT_SEQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="200" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1add10d476a3868e86d1f41ee58fb7b5b0" prot="public" static="no">
        <type>struct <ref refid="structcvc__commcert__seq__st" kindref="compound">cvc_commcert_seq_st</ref></type>
        <definition>typedef struct cvc_commcert_seq_st  CVC_COMMCERT_SEQ</definition>
        <argsstring></argsstring>
        <name>CVC_COMMCERT_SEQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1adf748bf4eb467dbce2b5ea54c3a2062f" prot="public" static="no">
        <type>struct <ref refid="structcvc__certificate__description__st" kindref="compound">cvc_certificate_description_st</ref></type>
        <definition>typedef struct cvc_certificate_description_st  CVC_CERTIFICATE_DESCRIPTION</definition>
        <argsstring></argsstring>
        <name>CVC_CERTIFICATE_DESCRIPTION</name>
        <briefdescription>
<para>This structure holds further information about a card verifiable certificate in human readable form. </para>        </briefdescription>
        <detaileddescription>
<para>The certificate description is used by a local terminal as part of the user interaction for online authentication of a remote terminal and may be ignored by the MRTD chip.</para><para><simplesect kind="see"><para>TR-03110 C.3.1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="258" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1a5fb0fe58283be131b751976c3fd48fcd" prot="public" static="no">
        <type>struct <ref refid="structcvc__cert__request__body__seq__st" kindref="compound">cvc_cert_request_body_seq_st</ref></type>
        <definition>typedef struct cvc_cert_request_body_seq_st  CVC_CERT_REQUEST_BODY_SEQ</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_REQUEST_BODY_SEQ</name>
        <briefdescription>
<para>The body of the CV certificate request (without signature) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>TR-03110 C.2. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1ae24aba1a3035e3c536f785aca5fe5080" prot="public" static="no">
        <type><ref refid="cv__cert_8h_1a5fb0fe58283be131b751976c3fd48fcd" kindref="member">CVC_CERT_REQUEST_BODY_SEQ</ref></type>
        <definition>typedef CVC_CERT_REQUEST_BODY_SEQ CVC_CERT_REQUEST_BODY</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_REQUEST_BODY</name>
        <briefdescription>
<para>Short name for CVC_CERT_REQUEST_BODY_SEQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="290" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1ab603b01cff646c76e5db0fc5fefcc780" prot="public" static="no">
        <type>struct <ref refid="structcvc__cert__request__seq__st" kindref="compound">cvc_cert_request_seq_st</ref></type>
        <definition>typedef struct cvc_cert_request_seq_st  CVC_CERT_REQUEST_SEQ</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_REQUEST_SEQ</name>
        <briefdescription>
<para>The actual certifcate request, consisting of the body and inner signature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>TR-03110 C.2. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1a3c0041409de1d0ac8fdf5cd8f981b322" prot="public" static="no">
        <type><ref refid="cv__cert_8h_1ab603b01cff646c76e5db0fc5fefcc780" kindref="member">CVC_CERT_REQUEST_SEQ</ref></type>
        <definition>typedef CVC_CERT_REQUEST_SEQ CVC_CERT_REQUEST</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_REQUEST</name>
        <briefdescription>
<para>Short name for CVC_CERT_REQUEST_SEQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="304" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1a0dd5bef6cecaa4d9a1c4daea9a9a23f6" prot="public" static="no">
        <type>struct <ref refid="structcvc__cert__authentication__request__seq__st" kindref="compound">cvc_cert_authentication_request_seq_st</ref></type>
        <definition>typedef struct cvc_cert_authentication_request_seq_st  CVC_CERT_AUTHENTICATION_REQUEST_SEQ</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_AUTHENTICATION_REQUEST_SEQ</name>
        <briefdescription>
<para>The authentication request, consisting of the certificate request, certificate authority reference and outer signature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>TR-03110 C.2. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="324" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cv__cert_8h_1ac5ffa8517c061b409d8dd92285b9ce15" prot="public" static="no">
        <type><ref refid="cv__cert_8h_1a0dd5bef6cecaa4d9a1c4daea9a9a23f6" kindref="member">CVC_CERT_AUTHENTICATION_REQUEST_SEQ</ref></type>
        <definition>typedef CVC_CERT_AUTHENTICATION_REQUEST_SEQ CVC_CERT_AUTHENTICATION_REQUEST</definition>
        <argsstring></argsstring>
        <name>CVC_CERT_AUTHENTICATION_REQUEST</name>
        <briefdescription>
<para>Short name for CVC_CERT_AUTHENTICATION_REQUEST_SEQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="326" column="1" bodyfile="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__management_1ga59de291be2953ebf60bce12225fed74f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
        <definition>CVC_CERT* CVC_d2i_CVC_CERT</definition>
        <argsstring>(CVC_CERT **cert, const unsigned char **in, long len)</argsstring>
        <name>CVC_d2i_CVC_CERT</name>
        <param>
          <type><ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> **</type>
          <declname>cert</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>in</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Convert ASN1 formatted CV certificate to the internal structure. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Where to save the CV certificate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>ASN1 formatted CV certificate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of <emphasis>in</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CV certificate or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__management_1ga63dd3f2ebdc39d4a9e0b0af8d12ec655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int i2d_CVC_CERT</definition>
        <argsstring>(CVC_CERT *a, unsigned char **out)</argsstring>
        <name>i2d_CVC_CERT</name>
        <param>
          <type><ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Convert a CV certificate description to its ASN1 representation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to write the ASN1 representation of <emphasis>a</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes successfully encoded or a negative value if an error occured. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__management_1ga90b0e7ddb7b193cbc414f8d88cd9e6cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
        <definition>CVC_CERT* CVC_CERT_new</definition>
        <argsstring>(void)</argsstring>
        <name>CVC_CERT_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Allocate memory for a CV certificate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>CHAT or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__management_1ga24e6f1a7b4eff8f8379ca5eed3f20b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CVC_CERT_free</definition>
        <argsstring>(CVC_CERT *a)</argsstring>
        <name>CVC_CERT_free</name>
        <param>
          <type><ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Free a CV certificate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__management_1ga19aa7bd7c16a19d41536c674283d1457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
        <definition>CVC_CERT* d2i_CVC_CERT_bio</definition>
        <argsstring>(BIO *bp, CVC_CERT **cvc)</argsstring>
        <name>d2i_CVC_CERT_bio</name>
        <param>
          <type>BIO *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> **</type>
          <declname>cvc</declname>
        </param>
        <briefdescription>
<para>Load a CV certificate from a BIO object. </para>        </briefdescription>
        <detaileddescription>
<para>This function seeks the BIO so that subsequent reads of multiple certificates are possible.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">bp</parametername>
</parameternamelist>
<parameterdescription>
<para>bio object where to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">cvc</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) CV certificate to use</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CV certificate read or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__management_1ga84dfe7c3da5df6756c92eeca501c87fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EVP_PKEY *</type>
        <definition>EVP_PKEY* CVC_pubkey2pkey</definition>
        <argsstring>(const CVC_CERT *cert, BN_CTX *bn_ctx, EVP_PKEY *out)</argsstring>
        <name>CVC_pubkey2pkey</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cert</declname>
        </param>
        <param>
          <type>BN_CTX *</type>
          <declname>bn_ctx</declname>
        </param>
        <param>
          <type>EVP_PKEY *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Extract the public key from a CV certificate. Since EC domain parameters are only included in CVCA certificates, they must be passed as parameters for DV and terminal certificates. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>the certificate containing the public key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bn_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">out</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) where to save the extracted key. May contain domain parameters.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An EVP_PKEY container with the public key or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__management_1ga5fc040c933e5f19f17af686bd5f6cf6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcvc__pubkey__st" kindref="compound">CVC_PUBKEY</ref> *</type>
        <definition>CVC_PUBKEY* CVC_pkey2pubkey</definition>
        <argsstring>(int all_parameters, int protocol, EVP_PKEY *key, BN_CTX *bn_ctx, CVC_PUBKEY *out)</argsstring>
        <name>CVC_pkey2pubkey</name>
        <param>
          <type>int</type>
          <declname>all_parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>EVP_PKEY *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>BN_CTX *</type>
          <declname>bn_ctx</declname>
        </param>
        <param>
          <type><ref refid="structcvc__pubkey__st" kindref="compound">CVC_PUBKEY</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__printing_1ga4d2388a9e59f0494a7fc8b8bf5cd5538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int certificate_description_print</definition>
        <argsstring>(BIO *bio, const CVC_CERTIFICATE_DESCRIPTION *desc, int indent)</argsstring>
        <name>certificate_description_print</name>
        <param>
          <type>BIO *</type>
          <declname>bio</declname>
        </param>
        <param>
          <type>const <ref refid="cv__cert_8h_1adf748bf4eb467dbce2b5ea54c3a2062f" kindref="member">CVC_CERTIFICATE_DESCRIPTION</ref> *</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Print CV certificate description in human readable form. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bio</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to print the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate desciption to print </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indent</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of spaces to prepend</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 on success or 0 in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__printing_1ga6cbe7fccc3b3c50761efc05f43a00c3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cvc_chat_print</definition>
        <argsstring>(BIO *bio, const CVC_CHAT *chat, int indent)</argsstring>
        <name>cvc_chat_print</name>
        <param>
          <type>BIO *</type>
          <declname>bio</declname>
        </param>
        <param>
          <type>const <ref refid="cv__cert_8h_1a397bdd4c39a973f58c75c51c884d2d8a" kindref="member">CVC_CHAT</ref> *</type>
          <declname>chat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Print CHAT in human readable form. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bio</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to print the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chat</parametername>
</parameternamelist>
<parameterdescription>
<para>CHAT to dump </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indent</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of spaces to prepend</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 on success or 0 in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__printing_1gacdda7b257013c199ce6ff92793fa6767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cvc_chat_print_authorizations</definition>
        <argsstring>(BIO *bio, const CVC_CHAT *chat, int indent)</argsstring>
        <name>cvc_chat_print_authorizations</name>
        <param>
          <type>BIO *</type>
          <declname>bio</declname>
        </param>
        <param>
          <type>const <ref refid="cv__cert_8h_1a397bdd4c39a973f58c75c51c884d2d8a" kindref="member">CVC_CHAT</ref> *</type>
          <declname>chat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Print the relative authorization contained in a CHAT in human readable form. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bio</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to print the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chat</parametername>
</parameternamelist>
<parameterdescription>
<para>CHAT which contains the relative authorization </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indent</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of spaces to prepend</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 on success or 0 in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__printing_1ga33515c2eb1aa44b1a85f7d9e9fa9c15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CVC_print</definition>
        <argsstring>(BIO *bio, const CVC_CERT *cv, int indent)</argsstring>
        <name>CVC_print</name>
        <param>
          <type>BIO *</type>
          <declname>bio</declname>
        </param>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Print CV certificate in human readable form. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bio</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to print the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cv</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate to print </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indent</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of spaces to prepend</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 on success or 0 in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__printing_1ga9e8c6ae74ee9d904c252fbb84842561e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int certificate_request_print</definition>
        <argsstring>(BIO *bio, const CVC_CERT_REQUEST *request, int indent)</argsstring>
        <name>certificate_request_print</name>
        <param>
          <type>BIO *</type>
          <declname>bio</declname>
        </param>
        <param>
          <type>const <ref refid="cv__cert_8h_1a3c0041409de1d0ac8fdf5cd8f981b322" kindref="member">CVC_CERT_REQUEST</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Print CV certificate request in human readable form. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bio</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to print the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate request to print </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indent</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of spaces to prepend</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 on success or 0 in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__printing_1ga24eac0cd08d21e122f93fe8e59f598e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int certificate_authentication_request_print</definition>
        <argsstring>(BIO *bio, const CVC_CERT_AUTHENTICATION_REQUEST *authentication, int indent)</argsstring>
        <name>certificate_authentication_request_print</name>
        <param>
          <type>BIO *</type>
          <declname>bio</declname>
        </param>
        <param>
          <type>const <ref refid="cv__cert_8h_1ac5ffa8517c061b409d8dd92285b9ce15" kindref="member">CVC_CERT_AUTHENTICATION_REQUEST</ref> *</type>
          <declname>authentication</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Print CV certificate authentication request in human readable form. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bio</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to print the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate authentication request to print </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indent</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of spaces to prepend</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 on success or 0 in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1a604835f44c2197c1c9c7f8f8498e3112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="cv__cert_8h_1a397bdd4c39a973f58c75c51c884d2d8a" kindref="member">CVC_CHAT</ref> *</type>
        <definition>const CVC_CHAT* cvc_get_chat</definition>
        <argsstring>(const CVC_CERT *cvc)</argsstring>
        <name>cvc_get_chat</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cvc</declname>
        </param>
        <briefdescription>
<para>Get the CHAT contained in a CV certifcate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cvc</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the CHAT of <emphasis>cvc</emphasis> or NULL in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1a5455c36dff717cd86b76e66e5745f26e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115a" kindref="member">cvc_terminal_role</ref></type>
        <definition>enum cvc_terminal_role CVC_get_role</definition>
        <argsstring>(const CVC_CHAT *chat)</argsstring>
        <name>CVC_get_role</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1a397bdd4c39a973f58c75c51c884d2d8a" kindref="member">CVC_CHAT</ref> *</type>
          <declname>chat</declname>
        </param>
        <briefdescription>
<para>Extract the terminal-type (terminal, DV, CVCA) from the CHAT. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">chat</parametername>
</parameternamelist>
<parameterdescription>
<para>CHAT</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 in case of an error or one of the following values:<itemizedlist>
<listitem><para><computeroutput>CVC_CVCA</computeroutput> (CVCA certificate)</para></listitem><listitem><para><computeroutput>CVC_DV</computeroutput> (DVCA certificate)</para></listitem><listitem><para><computeroutput>CVC_DocVer</computeroutput> (DVCA certificate)</para></listitem><listitem><para><computeroutput>CVC_Terminal</computeroutput> (terminal certificate) </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1ab7320b3c4d18c2a60eeca9fc6b64d974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short</type>
        <definition>short CVC_get_profile_identifier</definition>
        <argsstring>(const CVC_CERT *cert)</argsstring>
        <name>CVC_get_profile_identifier</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Return the profile identifier of a CV certificate as an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>The certificate from which we want to return the profile identifier</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The profile identifier or -1 in case of an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1a74f1735bfd33173942bdfb997e2a2678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* CVC_get_car</definition>
        <argsstring>(const CVC_CERT *cert)</argsstring>
        <name>CVC_get_car</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Return the CAR of a CV certificate as a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>The certificate from which we want to return the CAR</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CAR string or NULL in case of an error</para></simplesect>
<simplesect kind="note"><para>Result should be freed with <computeroutput>OpenSSL_free()</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1a9ab545b897f4f23279c2ba7189495e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* CVC_get_chr</definition>
        <argsstring>(const CVC_CERT *cert)</argsstring>
        <name>CVC_get_chr</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Return the CAR of a CV certificate as a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>The certificate from which we want to return the CHR</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CHR string or NULL in case of an error</para></simplesect>
<simplesect kind="note"><para>Result should be freed with <computeroutput>OpenSSL_free()</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1a2ff4c4e407f45866eaa658bb53b05514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* CVC_get_effective_date</definition>
        <argsstring>(const CVC_CERT *cert)</argsstring>
        <name>CVC_get_effective_date</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Convert the effective date and expiration date, of a certificate to a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>The certificate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Null terminated string representation of the date</para></simplesect>
<simplesect kind="note"><para>Result should be freed with <computeroutput>OpenSSL_free()</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1a20c200f0130936fab4501481cb119253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* CVC_get_expiration_date</definition>
        <argsstring>(const CVC_CERT *cert)</argsstring>
        <name>CVC_get_expiration_date</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Convert the expiration date of a certificate to a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>The certificate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Null terminated string representation of the date or NULL in case of an error</para></simplesect>
<simplesect kind="note"><para>Result should be freed with <computeroutput>OpenSSL_free()</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1aaba1e78aa4951f1ae9c5b777b3cff977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CVC_verify_signature</definition>
        <argsstring>(const CVC_CERT *cert, EVP_PKEY *key)</argsstring>
        <name>CVC_verify_signature</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cert</declname>
        </param>
        <param>
          <type>EVP_PKEY *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Verify the signature of a CV certificate using the public key of the certificate issuer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cert</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate to verify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Public key used for verification</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the signature was verified, 0 if not and a negative value in case of an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1a552794e00fda445f91610dad02ac5803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CVC_verify_request_signature</definition>
        <argsstring>(const CVC_CERT_REQUEST *request)</argsstring>
        <name>CVC_verify_request_signature</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1a3c0041409de1d0ac8fdf5cd8f981b322" kindref="member">CVC_CERT_REQUEST</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Verify the inner signature of a CV certificate request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate request to verify</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the signature was verified, 0 if not and a negative value in case of an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1aa2938141330b9c7096a0273b89bde955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CVC_verify_authentication_request_signatures</definition>
        <argsstring>(struct eac_ctx *ctx, const CVC_CERT_AUTHENTICATION_REQUEST *authentication)</argsstring>
        <name>CVC_verify_authentication_request_signatures</name>
        <param>
          <type>struct <ref refid="structeac__ctx" kindref="compound">eac_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="cv__cert_8h_1ac5ffa8517c061b409d8dd92285b9ce15" kindref="member">CVC_CERT_AUTHENTICATION_REQUEST</ref> *</type>
          <declname>authentication</declname>
        </param>
        <briefdescription>
<para>Verify the inner and outer signature of a CV certificate request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>EAC context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">authentication</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate request to verify</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the signatures were verified, 0 if not and a negative value in case of an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1a6f758242008190302811e2249ce4125d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CVC_check_description</definition>
        <argsstring>(const CVC_CERT *cv, const unsigned char *cert_desc_in, const unsigned int cert_desc_in_len)</argsstring>
        <name>CVC_check_description</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cv</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>cert_desc_in</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>cert_desc_in_len</declname>
        </param>
        <briefdescription>
<para>Check whether or not the certificate contains the correct hash of the CV certificate description. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cv</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cert_desc_in</parametername>
</parameternamelist>
<parameterdescription>
<para>ASN1 representation of the CV certificate description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cert_desc_in_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of <emphasis>cvc_desc_in</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the certificate contains the correct hash, 0 if not or -1 in case of an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="642" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cv__cert_8h_1ac3041c6df1ce54acce6adad2f2b20273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BUF_MEM *</type>
        <definition>BUF_MEM* CVC_hash_description</definition>
        <argsstring>(const CVC_CERT *cv, const unsigned char *cert_desc, size_t cert_desc_len)</argsstring>
        <name>CVC_hash_description</name>
        <param>
          <type>const <ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref> *</type>
          <declname>cv</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>cert_desc</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cert_desc_len</declname>
        </param>
        <briefdescription>
<para>Create a hash over a certificate&apos;s description. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cv</parametername>
</parameternamelist>
<parameterdescription>
<para>CV certificate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cert_desc_in</parametername>
</parameternamelist>
<parameterdescription>
<para>ASN1 representation of the CV certificate description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cert_desc_in_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of <emphasis>cvc_desc_in</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hashed description or NULL in case of an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h" line="654" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for Card Verifiable Certificates. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Dominik Oepen <ulink url="mailto:oepen@informatik.hu-berlin.de">oepen@informatik.hu-berlin.de</ulink> </para></simplesect>
<simplesect kind="author"><para>Frank Morgner <ulink url="mailto:frankmorgner@gmail.com">frankmorgner@gmail.com</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Dominik<sp/>Oepen<sp/>and<sp/>Frank<sp/>Morgner</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>OpenPACE.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>OpenPACE<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>OpenPACE<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT<sp/>ANY</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along<sp/>with</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>OpenPACE.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor">#ifndef<sp/>CVC_CERT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CVC_CERT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="objects_8h" kindref="compound">eac/objects.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/asn1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/asn1t.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/bio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structeac__ctx" kindref="compound">eac_ctx</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ASN1_APP_IMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="cv__cert_8h_1a94b4346228e7f2dfe7ddef89af1ca4d4" refkind="member"><highlight class="preprocessor">#define<sp/>ASN1_APP_IMP(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>ASN1_EX_TYPE(ASN1_TFLG_IMPTAG|ASN1_TFLG_APPLICATION,<sp/>tag,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ASN1_APP_IMP_OPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="cv__cert_8h_1a98ef9b11d6ecb604ac25fa1287c30993" refkind="member"><highlight class="preprocessor">#define<sp/>ASN1_APP_IMP_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>ASN1_EX_TYPE(ASN1_TFLG_IMPTAG|ASN1_TFLG_APPLICATION|ASN1_TFLG_OPTIONAL,<sp/>tag,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ASN1_APP_EXP_OPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="cv__cert_8h_1a0d89b7dcca78890a2f2fc317bdecbfac" refkind="member"><highlight class="preprocessor">#define<sp/>ASN1_APP_EXP_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>ASN1_EX_TYPE(ASN1_TFLG_EXPTAG|ASN1_TFLG_APPLICATION|ASN1_TFLG_OPTIONAL,<sp/>tag,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ASN1_APP_IMP_SEQUENCE_OF_OPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASN1_APP_IMP_SEQUENCE_OF_OPT(stname,<sp/>field,<sp/>type,<sp/>tag)<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASN1_EX_TYPE(ASN1_TFLG_SEQUENCE_OF|ASN1_TFLG_IMPTAG|ASN1_TFLG_APPLICATION|ASN1_TFLG_OPTIONAL,<sp/>tag,<sp/>stname,<sp/>field,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115a" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115a" kindref="member">cvc_terminal_role</ref><sp/>{</highlight></codeline>
<codeline lineno="62" refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aac01726f5220ca8395070e254750af6fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aac01726f5220ca8395070e254750af6fd" kindref="member">CVC_Terminal</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="64" refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aae47e5b251c04c991351d4e1f578d44f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aae47e5b251c04c991351d4e1f578d44f4" kindref="member">CVC_DV</ref>,</highlight></codeline>
<codeline lineno="66" refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aae3de1a7addb996e92d516661d2ed5edd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aae3de1a7addb996e92d516661d2ed5edd" kindref="member">CVC_DocVer</ref>,<sp/></highlight><highlight class="comment">/*<sp/>XXX<sp/>Ugly<sp/>*/</highlight></codeline>
<codeline lineno="68" refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aa9cc622972693e5a5fd3010c23003a931" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115aa9cc622972693e5a5fd3010c23003a931" kindref="member">CVC_CVCA</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>bits<sp/>and<sp/>bytes<sp/>of<sp/>the<sp/>relative<sp/>authorization<sp/>field<sp/>in<sp/>the<sp/>CHAT.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>See<sp/>TR-03110<sp/>pp.<sp/>85<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAC_AT_CHAT_BYTES<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAC_AT_CHAT_BITS<sp/>38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAC_IS_CHAT_BYTES<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAC_IS_CHAT_BITS<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAC_ST_CHAT_BYTES<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAC_ST_CHAT_BITS<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structcvc__chat__seq__st" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcvc__chat__seq__st" kindref="compound">cvc_chat_seq_st</ref><sp/>{</highlight></codeline>
<codeline lineno="86" refid="structcvc__chat__seq__st_1ad256b27e8fb8c4390412f175b8630559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OBJECT<sp/>*<ref refid="structcvc__chat__seq__st_1ad256b27e8fb8c4390412f175b8630559" kindref="member">terminal_type</ref>;</highlight></codeline>
<codeline lineno="88" refid="structcvc__chat__seq__st_1a7e750c5f8434462ea05c8602ad672011" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__chat__seq__st_1a7e750c5f8434462ea05c8602ad672011" kindref="member">relative_authorization</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1a67c8d91f1c8ec511b2d549d96f7dd8f0" kindref="member">CVC_CHAT_SEQ</ref>;</highlight></codeline>
<codeline lineno="91" refid="cv__cert_8h_1a397bdd4c39a973f58c75c51c884d2d8a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structcvc__chat__seq__st" kindref="compound">CVC_CHAT_SEQ</ref><sp/><ref refid="cv__cert_8h_1a397bdd4c39a973f58c75c51c884d2d8a" kindref="member">CVC_CHAT</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(CVC_CHAT)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="structcvc__pubkey__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structcvc__pubkey__st" kindref="compound">cvc_pubkey_st</ref><sp/>{</highlight></codeline>
<codeline lineno="104" refid="structcvc__pubkey__st_1a4d257366c407b3b031ffe1dc2ea97ce5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OBJECT<sp/>*<ref refid="structcvc__pubkey__st_1a4d257366c407b3b031ffe1dc2ea97ce5" kindref="member">oid</ref>;</highlight></codeline>
<codeline lineno="106" refid="structcvc__pubkey__st_1af1146b162c5ac3116d7c38d7519ebe29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__pubkey__st_1af1146b162c5ac3116d7c38d7519ebe29" kindref="member">cont1</ref>;</highlight></codeline>
<codeline lineno="108" refid="structcvc__pubkey__st_1a9e3f2ee8ffead450717d46fd481bfa2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__pubkey__st_1a9e3f2ee8ffead450717d46fd481bfa2f" kindref="member">cont2</ref>;</highlight></codeline>
<codeline lineno="110" refid="structcvc__pubkey__st_1ab83ac437168fc16aaa41c7a0b9522395" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__pubkey__st_1ab83ac437168fc16aaa41c7a0b9522395" kindref="member">cont3</ref>;</highlight></codeline>
<codeline lineno="112" refid="structcvc__pubkey__st_1ad58be5d0a1fbdc86325187d87a0ec7aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__pubkey__st_1ad58be5d0a1fbdc86325187d87a0ec7aa" kindref="member">cont4</ref>;</highlight></codeline>
<codeline lineno="114" refid="structcvc__pubkey__st_1aab4bae046882a2dd7b543def58fee35c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__pubkey__st_1aab4bae046882a2dd7b543def58fee35c" kindref="member">cont5</ref>;</highlight></codeline>
<codeline lineno="116" refid="structcvc__pubkey__st_1a1f6427049f50dc10bd720b756fa8dd8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__pubkey__st_1a1f6427049f50dc10bd720b756fa8dd8d" kindref="member">cont6</ref>;</highlight></codeline>
<codeline lineno="118" refid="structcvc__pubkey__st_1ace297c25e80edbc78986c1e63ddc363b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__pubkey__st_1ace297c25e80edbc78986c1e63ddc363b" kindref="member">cont7</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1ac4a7f8515584948330dda1c4d5707bb1" kindref="member">CVC_PUBKEY_BODY</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structcvc__pubkey__st" kindref="compound">CVC_PUBKEY_BODY</ref><sp/><ref refid="structcvc__pubkey__st" kindref="compound">CVC_PUBKEY</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(CVC_PUBKEY)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">DECLARE_ASN1_ITEM(CVC_PUBKEY)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DECLARE_ASN1_PRINT_FUNCTION(CVC_PUBKEY)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structcvc__discretionary__data__template__seq__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structcvc__discretionary__data__template__seq__st" kindref="compound">cvc_discretionary_data_template_seq_st</ref><sp/>{</highlight></codeline>
<codeline lineno="134" refid="structcvc__discretionary__data__template__seq__st_1a28bc2f1d46e8feb5ad202b25903f809d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OBJECT<sp/>*<ref refid="structcvc__discretionary__data__template__seq__st_1a28bc2f1d46e8feb5ad202b25903f809d" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="136" refid="structcvc__discretionary__data__template__seq__st_1a658a921185a7e04cc0b934b357f4b466" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__discretionary__data__template__seq__st_1a658a921185a7e04cc0b934b357f4b466" kindref="member">discretionary_data1</ref>;</highlight></codeline>
<codeline lineno="138" refid="structcvc__discretionary__data__template__seq__st_1a839b632118440ca294586fd82a041ae2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__discretionary__data__template__seq__st_1a839b632118440ca294586fd82a041ae2" kindref="member">discretionary_data2</ref>;</highlight></codeline>
<codeline lineno="140" refid="structcvc__discretionary__data__template__seq__st_1a07b6e574f47de38cf02fa8ab77ab2384" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__discretionary__data__template__seq__st_1a07b6e574f47de38cf02fa8ab77ab2384" kindref="member">discretionary_data3</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1a37165b80c9bdb17cd70ca57f20c35b1c" kindref="member">CVC_DISCRETIONARY_DATA_TEMPLATE_SEQ</ref>;</highlight></codeline>
<codeline lineno="143" refid="cv__cert_8h_1a10f55178dfcd3bba9e8ccbafae341f2e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structcvc__discretionary__data__template__seq__st" kindref="compound">CVC_DISCRETIONARY_DATA_TEMPLATE_SEQ</ref><sp/><ref refid="cv__cert_8h_1a10f55178dfcd3bba9e8ccbafae341f2e" kindref="member">CVC_DISCRETIONARY_DATA_TEMPLATE</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(CVC_DISCRETIONARY_DATA_TEMPLATE)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">DECLARE_ASN1_ITEM(CVC_DISCRETIONARY_DATA_TEMPLATE)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structcvc__cert__body__seq__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structcvc__cert__body__seq__st" kindref="compound">cvc_cert_body_seq_st</ref><sp/>{</highlight></codeline>
<codeline lineno="156" refid="structcvc__cert__body__seq__st_1a225ab4fd481f97ef1c5b4ce84b62cfb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_INTEGER<sp/>*<ref refid="structcvc__cert__body__seq__st_1a225ab4fd481f97ef1c5b4ce84b62cfb1" kindref="member">certificate_profile_identifier</ref>;</highlight></codeline>
<codeline lineno="160" refid="structcvc__cert__body__seq__st_1ac15201a6078ac2ed976019148c65245a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING<sp/>*<ref refid="structcvc__cert__body__seq__st_1ac15201a6078ac2ed976019148c65245a" kindref="member">certificate_authority_reference</ref>;</highlight></codeline>
<codeline lineno="164" refid="structcvc__cert__body__seq__st_1a47a11738c575d5b46499a4efda852c72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CVC_PUBKEY<sp/>*<ref refid="structcvc__cert__body__seq__st_1a47a11738c575d5b46499a4efda852c72" kindref="member">public_key</ref>;</highlight></codeline>
<codeline lineno="168" refid="structcvc__cert__body__seq__st_1a2f3ea562a965817ac5c64a8f3c935014" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING<sp/>*<ref refid="structcvc__cert__body__seq__st_1a2f3ea562a965817ac5c64a8f3c935014" kindref="member">certificate_holder_reference</ref>;</highlight></codeline>
<codeline lineno="170" refid="structcvc__cert__body__seq__st_1a1f2a4144cdcae0a93da53c59fbd7eb41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CVC_CHAT<sp/>*<ref refid="structcvc__cert__body__seq__st_1a1f2a4144cdcae0a93da53c59fbd7eb41" kindref="member">chat</ref>;</highlight></codeline>
<codeline lineno="174" refid="structcvc__cert__body__seq__st_1a18649711fa50b4740d406bb3dc6c8b63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__cert__body__seq__st_1a18649711fa50b4740d406bb3dc6c8b63" kindref="member">certificate_effective_date</ref>;</highlight></codeline>
<codeline lineno="178" refid="structcvc__cert__body__seq__st_1a74a9b55ba3d5b1f5773372d95cec9dda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__cert__body__seq__st_1a74a9b55ba3d5b1f5773372d95cec9dda" kindref="member">certificate_expiration_date</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(CVC_DISCRETIONARY_DATA_TEMPLATE)<sp/>*certificate_extensions;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1a3b75d6bf4d0aac69e05339da1d5ef44c" kindref="member">CVC_CERT_BODY_SEQ</ref>;</highlight></codeline>
<codeline lineno="185" refid="cv__cert_8h_1aa0d8534105b4b6c804ae40628fca719e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structcvc__cert__body__seq__st" kindref="compound">CVC_CERT_BODY_SEQ</ref><sp/><ref refid="cv__cert_8h_1aa0d8534105b4b6c804ae40628fca719e" kindref="member">CVC_CERT_BODY</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(CVC_CERT_BODY)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">DECLARE_ASN1_ITEM(CVC_CERT_BODY)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="structcvc__cert__seq__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structcvc__cert__seq__st" kindref="compound">cvc_cert_seq_st</ref><sp/>{</highlight></codeline>
<codeline lineno="195" refid="structcvc__cert__seq__st_1a590a84f99e3ba059e4e5a9d76e58860e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CVC_CERT_BODY<sp/>*<ref refid="structcvc__cert__seq__st_1a590a84f99e3ba059e4e5a9d76e58860e" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="197" refid="structcvc__cert__seq__st_1a1d06dc06fc61171b080c49a21514ab00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__cert__seq__st_1a1d06dc06fc61171b080c49a21514ab00" kindref="member">signature</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1af7131eaf8748a5e5a906ad1dccabcfcf" kindref="member">CVC_CERT_SEQ</ref>;</highlight></codeline>
<codeline lineno="200" refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structcvc__cert__seq__st" kindref="compound">CVC_CERT_SEQ</ref><sp/><ref refid="cv__cert_8h_1aea535afcbb11c7ac5f77e4edfb825ab4" kindref="member">CVC_CERT</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*void<sp/>CVC_CERT_print_ctx(BIO<sp/>*bio,<sp/>CVC_CERT<sp/>*cert,<sp/>int<sp/>indent,<sp/>const<sp/>ASN1_PCTX<sp/>*pctx);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME<sp/>the<sp/>default<sp/>printing<sp/>functions<sp/>currently<sp/>crash</highlight></codeline>
<codeline lineno="203"><highlight class="comment">DECLARE_ASN1_PRINT_FUNCTION(CVC_CERT)</highlight></codeline>
<codeline lineno="204"><highlight class="comment">DECLARE_ASN1_PRINT_FUNCTION(CVC_CHAT)</highlight></codeline>
<codeline lineno="205"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="structcvc__commcert__seq__st" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcvc__commcert__seq__st" kindref="compound">cvc_commcert_seq_st</ref><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcvc__commcert__seq__st_1a52f90146d3ac5aa2cb2936f107e41d87" kindref="member">STACK_OF</ref>(ASN1_OCTET_STRING)<sp/>*values;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}<sp/><ref refid="structcvc__commcert__seq__st" kindref="compound">CVC_COMMCERT_SEQ</ref>;</highlight></codeline>
<codeline lineno="222" refid="structcvc__certificate__description__st" refkind="compound"><highlight class="normal"><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcvc__certificate__description__st" kindref="compound">cvc_certificate_description_st</ref><sp/>{</highlight></codeline>
<codeline lineno="224" refid="structcvc__certificate__description__st_1a77a981adef7b7b18d7d2fc0dcf0d0eee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OBJECT<sp/>*<ref refid="structcvc__certificate__description__st_1a77a981adef7b7b18d7d2fc0dcf0d0eee" kindref="member">descriptionType</ref>;</highlight></codeline>
<codeline lineno="226" refid="structcvc__certificate__description__st_1aff81a8239e606700ba5cb5d3e9e88dc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING<sp/>*<ref refid="structcvc__certificate__description__st_1aff81a8239e606700ba5cb5d3e9e88dc9" kindref="member">issuerName</ref>;</highlight></codeline>
<codeline lineno="229" refid="structcvc__certificate__description__st_1ae07239454cef11745b9d44ce11c04eb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_PRINTABLESTRING<sp/>*<ref refid="structcvc__certificate__description__st_1ae07239454cef11745b9d44ce11c04eb4" kindref="member">issuerURL</ref>;</highlight></codeline>
<codeline lineno="231" refid="structcvc__certificate__description__st_1ac1be45c1e8ccdbd97486419573586013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING<sp/>*<ref refid="structcvc__certificate__description__st_1ac1be45c1e8ccdbd97486419573586013" kindref="member">subjectName</ref>;</highlight></codeline>
<codeline lineno="234" refid="structcvc__certificate__description__st_1a93c4e5528d00e394b001160000f0c537" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_PRINTABLESTRING<sp/>*<ref refid="structcvc__certificate__description__st_1a93c4e5528d00e394b001160000f0c537" kindref="member">subjectURL</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_PATCHED_OPENSSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_UTF8STRING<sp/>*plainTerms;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_IA5STRING<sp/>*htmlTerms;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*pdfTerms;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="structcvc__certificate__description__st_1a94a14c502bf8dcb3e0b15a7a961c5454" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__certificate__description__st_1a94a14c502bf8dcb3e0b15a7a961c5454" kindref="member">unused</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="structcvc__certificate__description__st_1ab04f4e9518453a86c40c312c09f5a5f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASN1_TYPE<sp/>*<ref refid="structcvc__certificate__description__st_1ab04f4e9518453a86c40c312c09f5a5f3" kindref="member">other</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structcvc__certificate__description__st_1a0d3dd884537299633d2865130d44cc5b" kindref="member">termsOfUsage</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="structcvc__certificate__description__st_1a89df677bee1e9180d083d626785bcf4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_PRINTABLESTRING<sp/>*<ref refid="structcvc__certificate__description__st_1a89df677bee1e9180d083d626785bcf4a" kindref="member">redirectURL</ref>;</highlight></codeline>
<codeline lineno="257" refid="structcvc__certificate__description__st_1ad89163e798fec8f4b9acef7f6c149755" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcvc__commcert__seq__st" kindref="compound">CVC_COMMCERT_SEQ</ref><sp/>*<ref refid="structcvc__certificate__description__st_1ad89163e798fec8f4b9acef7f6c149755" kindref="member">commCertificates</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1adf748bf4eb467dbce2b5ea54c3a2062f" kindref="member">CVC_CERTIFICATE_DESCRIPTION</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(<ref refid="structcvc__certificate__description__st" kindref="compound">CVC_CERTIFICATE_DESCRIPTION</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">DECLARE_ASN1_PRINT_FUNCTION(<ref refid="structcvc__certificate__description__st" kindref="compound">CVC_CERTIFICATE_DESCRIPTION</ref>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="structcvc__cert__request__body__seq__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structcvc__cert__request__body__seq__st" kindref="compound">cvc_cert_request_body_seq_st</ref><sp/>{</highlight></codeline>
<codeline lineno="271" refid="structcvc__cert__request__body__seq__st_1a637aeb87e207fc7075e144290591bfe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_INTEGER<sp/>*<ref refid="structcvc__cert__request__body__seq__st_1a637aeb87e207fc7075e144290591bfe2" kindref="member">certificate_profile_identifier</ref>;</highlight></codeline>
<codeline lineno="275" refid="structcvc__cert__request__body__seq__st_1a600a809bd24cf1461353c31c944acf7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING<sp/>*<ref refid="structcvc__cert__request__body__seq__st_1a600a809bd24cf1461353c31c944acf7a" kindref="member">certificate_authority_reference</ref>;</highlight></codeline>
<codeline lineno="279" refid="structcvc__cert__request__body__seq__st_1a9c139e9e28e62f8e65d1f67289a11004" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CVC_PUBKEY<sp/>*<ref refid="structcvc__cert__request__body__seq__st_1a9c139e9e28e62f8e65d1f67289a11004" kindref="member">public_key</ref>;</highlight></codeline>
<codeline lineno="283" refid="structcvc__cert__request__body__seq__st_1ae1d0a6791c93906d6ec0da99dcc3f095" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING<sp/>*<ref refid="structcvc__cert__request__body__seq__st_1ae1d0a6791c93906d6ec0da99dcc3f095" kindref="member">certificate_holder_reference</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>STACK_OF(CVC_DISCRETIONARY_DATA_TEMPLATE)<sp/>*certificate_extensions;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1a5fb0fe58283be131b751976c3fd48fcd" kindref="member">CVC_CERT_REQUEST_BODY_SEQ</ref>;</highlight></codeline>
<codeline lineno="290" refid="cv__cert_8h_1ae24aba1a3035e3c536f785aca5fe5080" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structcvc__cert__request__body__seq__st" kindref="compound">CVC_CERT_REQUEST_BODY_SEQ</ref><sp/><ref refid="cv__cert_8h_1ae24aba1a3035e3c536f785aca5fe5080" kindref="member">CVC_CERT_REQUEST_BODY</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(CVC_CERT_REQUEST_BODY)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="structcvc__cert__request__seq__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structcvc__cert__request__seq__st" kindref="compound">cvc_cert_request_seq_st</ref><sp/>{</highlight></codeline>
<codeline lineno="299" refid="structcvc__cert__request__seq__st_1a5301cbf633d82b8b0526135195be32ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CVC_CERT_REQUEST_BODY<sp/>*<ref refid="structcvc__cert__request__seq__st_1a5301cbf633d82b8b0526135195be32ba" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="301" refid="structcvc__cert__request__seq__st_1a78f3ce89184e9af12145271bd448691f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__cert__request__seq__st_1a78f3ce89184e9af12145271bd448691f" kindref="member">inner_signature</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1ab603b01cff646c76e5db0fc5fefcc780" kindref="member">CVC_CERT_REQUEST_SEQ</ref>;</highlight></codeline>
<codeline lineno="304" refid="cv__cert_8h_1a3c0041409de1d0ac8fdf5cd8f981b322" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structcvc__cert__request__seq__st" kindref="compound">CVC_CERT_REQUEST_SEQ</ref><sp/><ref refid="cv__cert_8h_1a3c0041409de1d0ac8fdf5cd8f981b322" kindref="member">CVC_CERT_REQUEST</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(CVC_CERT_REQUEST)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">/*void<sp/>CVC_CERT_REQUEST_print_ctx(BIO<sp/>*bio,<sp/>CVC_CERT_REQUEST<sp/>*cert,<sp/>int<sp/>indent,<sp/>const<sp/>ASN1_PCTX<sp/>*pctx);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME<sp/>the<sp/>default<sp/>printing<sp/>functions<sp/>currently<sp/>crash</highlight></codeline>
<codeline lineno="308"><highlight class="comment">DECLARE_ASN1_PRINT_FUNCTION(CVC_CERT_REQUEST)</highlight></codeline>
<codeline lineno="309"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="structcvc__cert__authentication__request__seq__st" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/><ref refid="structcvc__cert__authentication__request__seq__st" kindref="compound">cvc_cert_authentication_request_seq_st</ref><sp/>{</highlight></codeline>
<codeline lineno="317" refid="structcvc__cert__authentication__request__seq__st_1a141aafcff6a4a219520e8be13f1a0a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CVC_CERT_REQUEST<sp/>*<ref refid="structcvc__cert__authentication__request__seq__st_1a141aafcff6a4a219520e8be13f1a0a08" kindref="member">request</ref>;</highlight></codeline>
<codeline lineno="321" refid="structcvc__cert__authentication__request__seq__st_1ad1e127ab86b2f67e3d9d099a18edb150" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING<sp/>*<ref refid="structcvc__cert__authentication__request__seq__st_1ad1e127ab86b2f67e3d9d099a18edb150" kindref="member">certificate_authority_reference</ref>;</highlight></codeline>
<codeline lineno="323" refid="structcvc__cert__authentication__request__seq__st_1ade1fb2b0d00e59d224bc9436ff59935b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_OCTET_STRING<sp/>*<ref refid="structcvc__cert__authentication__request__seq__st_1ade1fb2b0d00e59d224bc9436ff59935b" kindref="member">outer_signature</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}<sp/><ref refid="cv__cert_8h_1a0dd5bef6cecaa4d9a1c4daea9a9a23f6" kindref="member">CVC_CERT_AUTHENTICATION_REQUEST_SEQ</ref>;</highlight></codeline>
<codeline lineno="326" refid="cv__cert_8h_1ac5ffa8517c061b409d8dd92285b9ce15" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structcvc__cert__authentication__request__seq__st" kindref="compound">CVC_CERT_AUTHENTICATION_REQUEST_SEQ</ref><sp/><ref refid="cv__cert_8h_1ac5ffa8517c061b409d8dd92285b9ce15" kindref="member">CVC_CERT_AUTHENTICATION_REQUEST</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">DECLARE_ASN1_FUNCTIONS(CVC_CERT_AUTHENTICATION_REQUEST)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*void<sp/>CVC_CERT_REQUEST_print_ctx(BIO<sp/>*bio,<sp/>CVC_CERT_AUTHENTICATION_REQUEST<sp/>*cert,<sp/>int<sp/>indent,<sp/>const<sp/>ASN1_PCTX<sp/>*pctx);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME<sp/>the<sp/>default<sp/>printing<sp/>functions<sp/>currently<sp/>crash</highlight></codeline>
<codeline lineno="330"><highlight class="comment">DECLARE_ASN1_PRINT_FUNCTION(CVC_CERT_AUTHENTICATION_REQUEST)</highlight></codeline>
<codeline lineno="331"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">CVC_CERT<sp/>*<ref refid="group__management_1ga59de291be2953ebf60bce12225fed74f" kindref="member">CVC_d2i_CVC_CERT</ref>(CVC_CERT<sp/>**cert,<sp/>const<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**in,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__management_1ga63dd3f2ebdc39d4a9e0b0af8d12ec655" kindref="member">i2d_CVC_CERT</ref>(CVC_CERT<sp/>*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="group__management_1gaf8df0122e9d69243120b62033c4b9474" refkind="member"><highlight class="preprocessor">#define<sp/>CVC_CERT_dup(x)<sp/>ASN1_dup_of(CVC_CERT,<sp/>i2d_CVC_CERT,<sp/>CVC_d2i_CVC_CERT,<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="group__management_1ga3c3f5a64d45ed99d9c5cfd0a0c61b869" refkind="member"><highlight class="preprocessor">#define<sp/>CVC_PUBKEY_dup(x)<sp/>ASN1_dup_of(CVC_PUBKEY,<sp/>i2d_CVC_PUBKEY,<sp/>d2i_CVC_PUBKEY,<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="group__management_1gadf010f3a63a21336d1025a3f7814c322" refkind="member"><highlight class="preprocessor">#define<sp/>CVC_CHAT_dup(x)<sp/>ASN1_dup_of(CVC_CHAT,<sp/>i2d_CVC_CHAT,<sp/>d2i_CVC_CHAT,<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">CVC_CERT<sp/>*<ref refid="group__management_1ga90b0e7ddb7b193cbc414f8d88cd9e6cc" kindref="member">CVC_CERT_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__management_1ga24e6f1a7b4eff8f8379ca5eed3f20b8c" kindref="member">CVC_CERT_free</ref>(CVC_CERT<sp/>*a);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">CVC_CERT<sp/>*<ref refid="group__management_1ga19aa7bd7c16a19d41536c674283d1457" kindref="member">d2i_CVC_CERT_bio</ref>(BIO<sp/>*bp,<sp/>CVC_CERT<sp/>**cvc);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">EVP_PKEY<sp/>*</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><ref refid="group__management_1ga84dfe7c3da5df6756c92eeca501c87fe" kindref="member">CVC_pubkey2pkey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cert,<sp/>BN_CTX<sp/>*bn_ctx,<sp/>EVP_PKEY<sp/>*out);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">CVC_PUBKEY<sp/>*</highlight></codeline>
<codeline lineno="427"><highlight class="normal">CVC_pkey2pubkey(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>all_parameters,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocol,<sp/>EVP_PKEY<sp/>*key,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BN_CTX<sp/>*bn_ctx,<sp/>CVC_PUBKEY<sp/>*out);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__printing_1ga4d2388a9e59f0494a7fc8b8bf5cd5538" kindref="member">certificate_description_print</ref>(BIO<sp/>*bio,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcvc__certificate__description__st" kindref="compound">CVC_CERTIFICATE_DESCRIPTION</ref><sp/>*desc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><ref refid="group__printing_1ga6cbe7fccc3b3c50761efc05f43a00c3a" kindref="member">cvc_chat_print</ref>(BIO<sp/>*bio,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CHAT<sp/>*chat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><ref refid="group__printing_1gacdda7b257013c199ce6ff92793fa6767" kindref="member">cvc_chat_print_authorizations</ref>(BIO<sp/>*bio,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CHAT<sp/>*chat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><ref refid="group__printing_1ga33515c2eb1aa44b1a85f7d9e9fa9c15e" kindref="member">CVC_print</ref>(BIO<sp/>*bio,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__printing_1ga9e8c6ae74ee9d904c252fbb84842561e" kindref="member">certificate_request_print</ref>(BIO<sp/>*bio,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT_REQUEST<sp/>*request,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__printing_1ga24eac0cd08d21e122f93fe8e59f598e7" kindref="member">certificate_authentication_request_print</ref>(BIO<sp/>*bio,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT_AUTHENTICATION_REQUEST<sp/>*authentication,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CHAT<sp/>*</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><ref refid="cv__cert_8h_1a604835f44c2197c1c9c7f8f8498e3112" kindref="member">cvc_get_chat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cvc);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cv__cert_8h_1a0203c4d440a0ac1ac0e80963a9c8115a" kindref="member">cvc_terminal_role</ref></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><ref refid="cv__cert_8h_1a5455c36dff717cd86b76e66e5745f26e" kindref="member">CVC_get_role</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CHAT<sp/>*chat);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="keywordtype">short</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><ref refid="cv__cert_8h_1ab7320b3c4d18c2a60eeca9fc6b64d974" kindref="member">CVC_get_profile_identifier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cert);</highlight></codeline>
<codeline lineno="555"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><ref refid="cv__cert_8h_1a74f1735bfd33173942bdfb997e2a2678" kindref="member">CVC_get_car</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cert);</highlight></codeline>
<codeline lineno="566"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="cv__cert_8h_1a9ab545b897f4f23279c2ba7189495e64" kindref="member">CVC_get_chr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cert);</highlight></codeline>
<codeline lineno="578"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><ref refid="cv__cert_8h_1a2ff4c4e407f45866eaa658bb53b05514" kindref="member">CVC_get_effective_date</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cert);</highlight></codeline>
<codeline lineno="590"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><ref refid="cv__cert_8h_1a20c200f0130936fab4501481cb119253" kindref="member">CVC_get_expiration_date</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cert);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><ref refid="cv__cert_8h_1aaba1e78aa4951f1ae9c5b777b3cff977" kindref="member">CVC_verify_signature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cert,<sp/>EVP_PKEY<sp/>*key);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><ref refid="cv__cert_8h_1a552794e00fda445f91610dad02ac5803" kindref="member">CVC_verify_request_signature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT_REQUEST<sp/>*request);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><ref refid="cv__cert_8h_1aa2938141330b9c7096a0273b89bde955" kindref="member">CVC_verify_authentication_request_signatures</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structeac__ctx" kindref="compound">eac_ctx</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT_AUTHENTICATION_REQUEST<sp/>*authentication);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><ref refid="cv__cert_8h_1a6f758242008190302811e2249ce4125d" kindref="member">CVC_check_description</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cert_desc_in,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cert_desc_in_len);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal">BUF_MEM<sp/>*<ref refid="cv__cert_8h_1ac3041c6df1ce54acce6adad2f2b20273" kindref="member">CVC_hash_description</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVC_CERT<sp/>*cv,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cert_desc,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cert_desc_len);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CVC_CERT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/fm/Dokumente/openpace/src/eac/cv_cert.h"/>
  </compounddef>
</doxygen>
